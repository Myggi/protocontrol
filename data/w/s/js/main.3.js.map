{"version":3,"sources":["components/Matrix.js","components/KaiborgFace.js","containers/Editor.js","data/Matrix.js","containers/Sidebar.js","containers/HeaderBar.js","containers/ModalContainer.js","Api/face.js","data/Util.js","components/NameModal.js","App.js","serviceWorker.js","index.js"],"names":["Row","props","className","children","LED","onClick","on","Matrix","rows","row","row_items","col","push","matrix","get","toggle","update","key","cols","grid","handle","name","clear","KaiborgRow","type","KaiborgFace","preparematrix","val","face","newmatrix","newface","updateface","Editor","console","log","data","Array","fill","map","x","top","bot","sweepfill","this","value","set","SidebarElement","classname","selectedface","NewButton","handleChange","event","setState","target","handleSubmit","state","length","alert","handleNewFace","preventDefault","onSubmit","onChange","placeholder","React","Component","Sidebar","faces","facename","handleSelectFace","HeaderBar","style","handleDuplicateFace","handleSaveFace","ModalContainer","modal","cloneElement","onClose","facedata","a","fetch","method","headers","body","response","arrayBuffer","tmp","Uint8Array","saveface","json","JSON","stringify","assembleFaceDataMatrix","array","written","Object","entries","face_part","n_rows","n_cols","cur_val","shift","Math","floor","getbit","pos","bitidx","NameModal","App","handleUpdateFace","unsaved","handleSetFace","getface","then","loadpart","offset","row_len","color","loadFaceFromArray","setface","handleDeleteFace","handleListFaces","listfaces","facenames","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"s/js/main.3.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\n\nfunction Row(props) {\n    return (\n        <div className=\"RowContainer\">\n            {props.children}\n        </div>\n    )\n}\n\nfunction LED(props) {\n    return(\n        <div className=\"ledcontainer\"\n            onClick={props.onClick}\n        >\n            <div className={props.on === 1 ? \"LedOn\" : \"LedOff\" }/>\n        </div>\n    )\n}\n\nfunction Matrix(props) {\n    // console.log(props.matrix);\n\n    const rows = [];\n    for (let row = 0; row < props.matrix.rows; row++) {\n        const row_items = [];\n        for (let col = 0; col < props.matrix.cols; col++) {\n            row_items.push(<LED\n                on={props.matrix.get(row, col)}\n                onClick={() => {\n                    props.matrix.toggle(row, col);\n                    props.update(props.matrix);\n                }}\n                key={col}\n            />)\n        }\n        rows.push(<Row key={row}> {row_items} </Row>)\n    }\n\n    return (\n        <Draggable\n            grid={[25,25]}\n            handle=\".MatrixTitleBar\"\n        >\n            <div className=\"MatrixWrapper\">\n                <div className=\"MatrixTitleBar\">\n                    <div className=\"MatrixLabel\"> {props.name} </div>\n                    <div className=\"MatrixCloseButton\" onClick={() => {\n                        props.matrix.clear()\n                        props.update(props.matrix)\n                    }}> x </div>\n                </div>\n                <div className={`MatrixContainer ${props.name}`}>\n                    {rows}\n                </div>\n            </div>\n        </Draggable>\n    );\n}\n\nexport default Matrix;\n","import React from \"react\";\nimport Matrix from \"./Matrix\";\n\nfunction KaiborgRow(props) {\n    return (\n        <div className={`KaiborgRow KaiborgRow_${props.type}`}>\n            {props.children}\n        </div>\n    )\n}\n\nfunction KaiborgFace(props) {\n    const preparematrix = (key) => {\n        const val = props.face[key];\n        return <Matrix\n            name={key}\n            matrix={val}\n            update={(newmatrix) => {\n                const newface = props.face;\n                newface[key] = newmatrix;\n                props.updateface(newface);\n            }}\n            key={key}\n        />\n    };\n\n    return (\n        <div className=\"KaiborgFace\">\n            <KaiborgRow type=\"eye\">\n                {preparematrix(\"eye_r\")}\n                {preparematrix(\"eye_l\")}\n            </KaiborgRow>\n            <KaiborgRow type=\"nose\">\n                {preparematrix(\"nose_r\")}\n                {preparematrix(\"nose_l\")}\n            </KaiborgRow>\n            <KaiborgRow type=\"mouth\">\n                {preparematrix(\"mouth_r\")}\n                {preparematrix(\"mouth_l\")}\n            </KaiborgRow>\n            {/*{Object.entries(props.face).map(([key, val]) => {*/}\n            {/*    return <Matrix*/}\n            {/*        name={key}*/}\n            {/*        matrix={val}*/}\n            {/*        update={(newmatrix) => {*/}\n            {/*            const newface = props.face;*/}\n            {/*            newface[key] = newmatrix;*/}\n            {/*            props.updateface(newface);*/}\n            {/*        }}*/}\n            {/*        key={key}*/}\n            {/*    />*/}\n            {/*})}*/}\n\n        </div>\n    )\n}\n\nexport default KaiborgFace;\n","import React from 'react';\nimport Matrix from \"../components/Matrix\";\nimport KaiborgFace from \"../components/KaiborgFace\";\n\nfunction Editor(props) {\n\n    console.log(props.face)\n\n    return (\n        <div className=\"Editor\">\n            <KaiborgFace updateface={props.updateface} face={props.face} />\n        </div>\n    );\n}\n\nexport default Editor;\n","class Matrix {\n    constructor(rows, cols) {\n        this.rows = rows;\n        this.cols = cols;\n\n        this.data = Array(rows).fill(0).map(x => Array(cols).fill(0));\n\n        this.top = Array(cols).fill(null);\n        this.bot = Array(cols).fill(null);\n    }\n\n    set(row, col, value) {\n        this.data[row][col] = value\n    }\n\n    get(row, col) {\n        return this.data[row][col]\n    }\n\n    clear = () => {\n        console.log('clear');\n        const rows = this.rows;\n        const cols = this.cols;\n        this.data = Array(rows).fill(0).map(x => Array(cols).fill(0));\n        this.top = Array(cols).fill(null);\n        this.bot = Array(cols).fill(null);\n        this.sweepfill()\n    }\n\n    toggle(row, col) {\n        this.data[row][col] = this.data[row][col] === 0 ? 1 : 0;\n    }\n\n    sweepfill() {\n        for (let col = 0; col < this.cols; col++) {\n            const top = this.top[col];\n            const bot = this.bot[col];\n\n            // Wipe first\n            for (let row = 0; row < this.rows; row++) {\n                this.set(row, col, 0);\n            }\n\n            if (top !== null && bot != null) {\n                for (let row = bot; row <= top; row++) {\n                    this.set(row, col, 1);\n                }\n            }\n        }\n    }\n\n    copy() {\n        const matrix = new Matrix(this.rows, this.cols);\n        for(let row = 0; row < this.rows; row++) {\n            for (let col = 0; col < this.cols; col++) {\n                matrix.data[row][col] = this.data[row][col]\n            }\n        }\n        return matrix;\n    }\n}\n\nexport default Matrix","import React from 'react';\n\nfunction SidebarElement(props) {\n    let classname = props.selectedface === props.name ?\n        \"sidebarelement_selected\" :\n        \"sidebarelement\";\n    return(\n        <div className={classname}\n            onClick={() => {\n                props.onClick(props.name)\n            }}>\n            {props.name}\n        </div>\n    )\n}\n\nclass NewButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {value: ''}\n    }\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    };\n\n    handleSubmit = (event) => {\n        if (this.state.value.length > 0) {\n            alert('A name was submitted: ' + this.state.value);\n            this.props.handleNewFace(this.state.value);\n        }\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div className='sidebarelement'>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        placeholder=\"+ New\"\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction Sidebar(props) {\n    return (\n        <div className=\"Sidebar\">\n            <NewButton handleNewFace={props.handleNewFace}/>\n            {/*<SidebarElement name=\" + New\" onClick={props.onNewFace}/>*/}\n            {props.faces.map((facename => <SidebarElement\n                name={facename}\n                onClick={props.handleSelectFace}\n                key={facename}\n                selectedface={props.selectedface}\n            />))}\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nfunction HeaderBar(props) {\n    return (\n        <div className=\"Headerbar\">\n            <div style={{'marginRight': 'auto'}}>\n                Beeper boie super cool editor v0.001\n            </div>\n            <div className='HeaderButton' onClick={props.handleDuplicateFace}> duplicate </div>\n            <div className='HeaderButton' onClick={props.handleSaveFace}> save </div>\n            <div className='HeaderButton'> delet dis </div>\n        </div>\n    )\n}\n\nexport default HeaderBar","import React from \"react\";\n\nclass ModalContainer extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        if(!this.props.modal) {\n            return null\n        }\n\n        console.log(this.props)\n\n        return (\n            <div className='ModalContainer'>\n                <div className='ModalContent'>\n                    {React.cloneElement(this.props.modal(),\n                        {onClose: this.props.onClose})}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ModalContainer","\nexport async function setface(facedata) {\n    const response = await fetch(\"/api/setface\", {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/octet-stream\",\n        },\n        body: facedata\n    });\n    console.log(response)\n    return response\n}\n\nexport async function getface(facename) {\n    const response = await fetch(`/api/getface/${facename}`);\n    const tmp = await response.arrayBuffer();\n    return new Uint8Array(tmp);\n}\n\nexport async function saveface(name, facedata) {\n    const response = await fetch(`/api/saveface/${name}`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/octet-stream\",\n        },\n        body: facedata\n    });\n    console.log(response);\n    return response\n}\n\nexport async function listfaces() {\n    const response = await fetch(\"/api/listfaces\");\n    return response.json()\n}\n\n\nexport async function newface(name) {\n    const response = await fetch(\"/api/newface\", {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({name: name})\n    });\n    console.log(response)\n    return response\n}","import Matrix from \"./Matrix\";\n\nexport function assembleFaceData(face) {\n    console.log(\"Assembling face data\");\n    // Assemble face data\n    let low = [];\n    let high = [];\n    for (const [key, face_part] of Object.entries(face)) {\n        console.log(\"Appending \" + key + \" len: \" + face_part.bot.length);\n        low = low.concat(face_part.bot);\n        high = high.concat(face_part.top);\n    }\n    return {\n        'low': low,\n        'high': high\n    }\n}\n\nexport function assembleFaceDataMatrix(face) {\n    console.log(\"Assembling face data\");\n    // Assemble face data\n    let array = new Uint8Array(16 + 16 + 8 + 8 + 32 + 32);\n    let written = 0;\n\n    for (const [key, face_part] of Object.entries(face)) {\n        console.log(\"Appending \" + key);\n        const n_rows = face_part.data.length;\n        const n_cols = face_part.data[0].length;\n\n        for (let row = 0; row < n_rows; row++) {\n            for (let col = 0; col < n_cols; col++) {\n                let cur_val = face_part.data[row][col] !== 0 ? 1 : 0;\n\n                //let shift = 7 - (written % 8);\n                let shift = written % 8;\n\n                array[Math.floor(written / 8)] |= cur_val << shift;\n\n                written += 1;\n            }\n        }\n    }\n    console.log(\"FACE ARRAY\", array);\n    return array\n}\n//\n// inline bool getbit(const uint8_t *buf, int pos)\n// {\n//     int byteidx = pos / (sizeof(uint8_t) * 8);\n//     int bitidx = pos % (sizeof(uint8_t) * 8);\n//\n//     uint8_t tmp = buf[byteidx];\n//\n//     int bit = (tmp >> bitidx) & 1;\n//\n//     return (bool)bit;\n// }\n\nfunction getbit(array, pos) {\n    let byteidx = Math.floor(pos / 8);\n    let bitidx = pos % 8;\n    let tmp = array[byteidx];\n\n    return (tmp >> bitidx) & 1;\n}\n\nexport function loadFaceFromArray(array) {\n    const face = {\n        \"eye_r\": new Matrix(8, 16),\n        \"eye_l\": new Matrix(8, 16),\n        \"nose_r\": new Matrix(8,8),\n        \"nose_l\": new Matrix(8,8),\n        \"mouth_r\": new Matrix(8,32),\n        \"mouth_l\": new Matrix(8,32)\n    };\n\n    function loadpart(name, offset, rows, cols, row_len) {\n        const matrix = face[name];\n\n        for (let col = 0; col < cols; col++) {\n            for (let row = 0; row < rows; row++) {\n                let color = getbit(array, offset + col + row * row_len);\n                matrix.set(row, col, color);\n            }\n        }\n    }\n\n    loadpart('eye_r', 0, 8, 16, 16);\n    loadpart('eye_l', 8*16, 8, 16, 16);\n    loadpart('nose_r', 8*16*2, 8, 8, 8);\n    loadpart('nose_l', 8*16*2 + 8*8, 8, 8, 8);\n    loadpart('mouth_r', 8*16*2 + 8*8*2, 8, 32, 32);\n    loadpart('mouth_l', 8*16*2 + 8*8*2 + 8*32, 8, 32, 32);\n    return face;\n}","import React from \"react\";\n\nclass NameModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    };\n\n    handleSubmit = (event) => {\n        if (this.state.value.length > 0) {\n            //alert('A name was submitted: ' + this.state.value);\n            this.props.onSubmit(this.state.value);\n        }\n        event.preventDefault();\n        this.props.onClose();\n    };\n\n    render() {\n        return (\n            <div className='NameModal'>\n                <button onClick={this.props.onClose}>\n                    close\n                </button>\n                Insert name\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        placeholder=\"Name\"\n                    />\n                </form>\n                <button onClick={this.handleSubmit}>\n                    submit\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default NameModal","import React from 'react';\nimport './App.css';\nimport Editor from \"./containers/Editor\";\nimport Matrix from \"./data/Matrix\";\nimport Sidebar from \"./containers/Sidebar\";\nimport HeaderBar from \"./containers/HeaderBar\";\nimport ModalContainer from \"./containers/ModalContainer\"\nimport {getface, listfaces, newface, saveface, setface} from \"./Api/face\";\nimport {assembleFaceDataMatrix, loadFaceFromArray} from \"./data/Util\";\nimport NameModal from './components/NameModal'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      face: {\n        \"eye_r\": new Matrix(8, 16),\n        \"eye_l\": new Matrix(8, 16),\n        \"nose_r\": new Matrix(8,8),\n        \"nose_l\": new Matrix(8,8),\n        \"mouth_r\": new Matrix(8,32),\n        \"mouth_l\": new Matrix(8,32)\n      },\n      facenames: [\n          'default',\n      ],\n      selectedface: 'default',\n      unsaved: false,\n      modal: false\n    }\n  }\n\n  // Updates the local face data\n  handleUpdateFace = (face, unsaved=true) => {\n    this.setState({face: face, unsaved: unsaved});\n    this.handleSetFace()\n  };\n\n  handleSelectFace = (facename) => {\n    // Api call to fetch face data\n    // Replace face data with fetched data\n    getface(facename).then(facedata => {\n        let newface = loadFaceFromArray(facedata);\n        this.handleUpdateFace(newface, false);\n    });\n\n    this.setState({selectedface: facename});\n  };\n\n  // Sets remote face data\n  handleSetFace = () => {\n    setface(assembleFaceDataMatrix(this.state.face))\n  };\n\n  handleSaveFace = () => {\n    saveface(this.state.selectedface, assembleFaceDataMatrix(this.state.face))\n  };\n\n  handleDeleteFace = () => {\n\n  };\n\n  handleNewFace = (facename) => {\n    newface(facename)\n        .then(() => {\n          this.handleListFaces()\n        })\n        .then(() => {\n          this.handleSelectFace(facename)\n        })\n  };\n\n  handleListFaces = () => {\n    listfaces().then(facenames => {\n      this.setState({facenames: facenames})\n    })\n  };\n\n  handleDuplicateFace = () => {\n    this.setState({\n      modal: () => <NameModal\n          onSubmit={\n            (name) => saveface(name,\n                assembleFaceDataMatrix(this.state.face))\n          }/>\n    });\n\n    this.handleListFaces();\n\n  };\n\n  componentDidMount() {\n    this.handleListFaces();\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <ModalContainer\n            modal={this.state.modal}\n            onClose={() => this.setState({modal: false})}\n          />\n          <HeaderBar\n              handleSaveFace={this.handleSaveFace}\n              handleDuplicateFace={this.handleDuplicateFace}\n          />\n          <div className=\"Main\">\n            <Sidebar\n                faces={this.state.facenames}\n                unsaved={this.state.unsaved}\n                selectedface={this.state.selectedface}\n                handleSelectFace={this.handleSelectFace}\n                handleNewFace={this.handleNewFace}\n            />\n            <Editor\n                face={this.state.face}\n                updateface={this.handleUpdateFace}\n            />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}